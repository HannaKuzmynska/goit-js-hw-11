{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const API_KEY = '44418472-b0d967fab2ad788a724b3e426';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport async function fetchImages(query) {\n    const url = `${BASE_URL}?key=${API_KEY}&q=${encodeURIComponent(query)}&image_type=photo&orientation=horizontal&safesearch=true`;\n\n    try {\n        const response = await fetch(url);\n        if (!response.ok) {\n            throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        return data.hits;\n    } catch (error) {\n        console.error('Error fetching images:', error);\n        throw error;\n    }\n}\n","import SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nexport function renderGallery(images) {\n    const gallery = document.querySelector('.gallery');\n    gallery.innerHTML = '';\n\n    const galleryItems = images.map(image => {\n        return `\n        <div class=\"gallery-box\">\n            <a href=\"${image.largeImageURL}\" class=\"gallery-item\">\n                <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" class=\"img\"/>\n            </a>\n            <div class=\"info\">\n                <div class=\"stats\">\n                    <div class=\"info-box\">\n                        <p class=\"info-header\">Likes:</p>\n                        <p class=\"info-numbers\">${image.likes}</p>\n                    </div>\n                    <div class=\"info-box\">\n                        <p class=\"info-header\">Views:</p>\n                        <p class=\"info-numbers\">${image.views}</p>\n                    </div>\n                    <div class=\"info-box\">\n                        <p class=\"info-header\">Comments:</p>\n                        <p class=\"info-numbers\">${image.comments}</p>\n                    </div>\n                    <div class=\"info-box\">\n                        <p class=\"info-header\">Downloads:</p>\n                        <p class=\"info-numbers\">${image.downloads}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n        `;\n    }).join('');\n\n    gallery.insertAdjacentHTML('beforeend', galleryItems);\n\n    const lightbox = new SimpleLightbox('.gallery a');\n    lightbox.refresh();\n}\nexport function showMessage(message) {\n    iziToast.error({\n        title: 'Error',\n        message: message,\n        position: 'topRight',\n    });\n}\nexport function showLoader() {\n    document.querySelector('#loader').classList.remove('hidden');\n}\n\nexport function hideLoader() {\n    document.querySelector('#loader').classList.add('hidden');\n}","import './css/styles.css';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport iziToast from 'izitoast';\nimport { fetchImages } from './js/pixabay-api';\nimport { renderGallery, showLoader, hideLoader } from './js/render-functions';\n\nlet currentQuery = '';\n\ndocument.querySelector('#search-form').addEventListener('submit', async (event) => {\n    event.preventDefault();\n\n    const queryInput = event.target.elements.query;\n    currentQuery = queryInput.value.trim();\n\n    if (!currentQuery) {\n        iziToast.error({\n            title: 'Error',\n            message: 'Please enter a search query.',\n            position: 'topRight',\n        });\n        return;\n    }\n\n    showLoader();\n    try {\n        const images = await fetchImages(currentQuery);\n        if (images.length === 0) {\n            iziToast.info({\n                title: 'Info',\n                message: 'Sorry, there are no images matching your search query. Please try again!',\n                position: 'topRight',\n            });\n            renderGallery([]);\n        } else {\n            renderGallery(images);\n        }\n    } catch (error) {\n        iziToast.error({\n            title: 'Error',\n            message: 'Failed to fetch images. Please try again later.',\n            position: 'topRight',\n        });\n    } finally {\n        hideLoader();\n    }\n\n    queryInput.value = '';\n});"],"names":["API_KEY","BASE_URL","fetchImages","query","url","response","error","renderGallery","images","gallery","galleryItems","image","SimpleLightbox","showLoader","hideLoader","currentQuery","event","queryInput","iziToast"],"mappings":"6vBAAA,MAAMA,EAAU,qCACVC,EAAW,2BAEV,eAAeC,EAAYC,EAAO,CACrC,MAAMC,EAAM,GAAGH,CAAQ,QAAQD,CAAO,MAAM,mBAAmBG,CAAK,CAAC,2DAErE,GAAI,CACA,MAAME,EAAW,MAAM,MAAMD,CAAG,EAChC,GAAI,CAACC,EAAS,GACV,MAAM,IAAI,MAAM,6BAA6B,EAGjD,OADa,MAAMA,EAAS,QAChB,IACf,OAAQC,EAAO,CACZ,cAAQ,MAAM,yBAA0BA,CAAK,EACvCA,CACT,CACL,CCZO,SAASC,EAAcC,EAAQ,CAClC,MAAMC,EAAU,SAAS,cAAc,UAAU,EACjDA,EAAQ,UAAY,GAEpB,MAAMC,EAAeF,EAAO,IAAIG,GACrB;AAAA;AAAA,uBAEQA,EAAM,aAAa;AAAA,4BACdA,EAAM,YAAY,UAAUA,EAAM,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAMhBA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,kDAIXA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,kDAIXA,EAAM,QAAQ;AAAA;AAAA;AAAA;AAAA,kDAIdA,EAAM,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,SAM5D,EAAE,KAAK,EAAE,EAEVF,EAAQ,mBAAmB,YAAaC,CAAY,EAEnC,IAAIE,EAAe,YAAY,EACvC,QAAO,CACpB,CAQO,SAASC,GAAa,CACzB,SAAS,cAAc,SAAS,EAAE,UAAU,OAAO,QAAQ,CAC/D,CAEO,SAASC,GAAa,CACzB,SAAS,cAAc,SAAS,EAAE,UAAU,IAAI,QAAQ,CAC5D,CCnDA,IAAIC,EAAe,GAEnB,SAAS,cAAc,cAAc,EAAE,iBAAiB,SAAU,MAAOC,GAAU,CAC/EA,EAAM,eAAc,EAEpB,MAAMC,EAAaD,EAAM,OAAO,SAAS,MAGzC,GAFAD,EAAeE,EAAW,MAAM,OAE5B,CAACF,EAAc,CACfG,EAAS,MAAM,CACX,MAAO,QACP,QAAS,+BACT,SAAU,UACtB,CAAS,EACD,MACH,CAEDL,IACA,GAAI,CACA,MAAML,EAAS,MAAMN,EAAYa,CAAY,EACzCP,EAAO,SAAW,GAClBU,EAAS,KAAK,CACV,MAAO,OACP,QAAS,2EACT,SAAU,UAC1B,CAAa,EACDX,EAAc,CAAE,CAAA,GAEhBA,EAAcC,CAAM,CAE3B,MAAe,CACZU,EAAS,MAAM,CACX,MAAO,QACP,QAAS,kDACT,SAAU,UACtB,CAAS,CACT,QAAc,CACNJ,GACH,CAEDG,EAAW,MAAQ,EACvB,CAAC"}